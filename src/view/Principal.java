package view;

import controller.ControllerCountry;
import utilities.ModeloDeTabla;
import javax.swing.JComboBox;
import model.Country;

/**
 * Clase Principal o nuestra interfaz grafica.
 * @see hereda de la clase JFrame nos presenta un marco grafico en el cual agregaremos nuestro componentes.
 * @author JorgeLPR
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creamos una lista desplegable(JComboBox) de tipo entero para listar el numero de filas que se visualizaran en el JTable.
     */    
    public JComboBox<Integer> pageJComboBox;

    private final ControllerCountry controlador;
    
    /**
     * Creamos el metodo constructor de la clase, en el cual inicalizamos nuestro controlador (ControllerCountry) y 
     * asignamos un modelo de tabla de tipo ModeloDeTabla a nuestro JTable(tablaPais).
     */
    public Principal() {
        initComponents();
        tablaPais.setModel(crearModeloDeTabla());
        controlador = new ControllerCountry(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        barraDesplazamiento = new javax.swing.JScrollPane();
        panelPrincipal = new javax.swing.JPanel();
        panelConsulta = new javax.swing.JPanel();
        panelListadoBusqueda = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        tableSroll = new javax.swing.JScrollPane();
        tablaPais = new javax.swing.JTable();
        paginationPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelPrincipal.setBackground(new java.awt.Color(255, 255, 255));
        panelPrincipal.setLayout(new java.awt.BorderLayout());

        panelConsulta.setBackground(new java.awt.Color(255, 255, 255));
        panelConsulta.setLayout(new java.awt.GridBagLayout());

        panelListadoBusqueda.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Resultados", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP));
        panelListadoBusqueda.setPreferredSize(new java.awt.Dimension(800, 470));
        panelListadoBusqueda.setLayout(new java.awt.GridBagLayout());

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel7.setText("Listado Paises");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        panelListadoBusqueda.add(jLabel7, gridBagConstraints);

        tableSroll.setPreferredSize(new java.awt.Dimension(683, 280));

        tablaPais.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableSroll.setViewportView(tablaPais);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 50, 0, 50);
        panelListadoBusqueda.add(tableSroll, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 50);
        panelListadoBusqueda.add(paginationPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(30, 10, 30, 10);
        panelConsulta.add(panelListadoBusqueda, gridBagConstraints);

        panelPrincipal.add(panelConsulta, java.awt.BorderLayout.PAGE_START);

        barraDesplazamiento.setViewportView(panelPrincipal);

        getContentPane().add(barraDesplazamiento, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane barraDesplazamiento;
    private javax.swing.JLabel jLabel7;
    public javax.swing.JPanel paginationPanel;
    public javax.swing.JPanel panelConsulta;
    public javax.swing.JPanel panelListadoBusqueda;
    private javax.swing.JPanel panelPrincipal;
    public javax.swing.JTable tablaPais;
    public javax.swing.JScrollPane tableSroll;
    // End of variables declaration//GEN-END:variables

    /**
     * Metodo en el cual devolvemos nuestro Modelo De Tabla, creamos una instancia de la clase ModeloDeTabla.java
     * y sobreescribimos sus metos abstractos.
    */
    private ModeloDeTabla crearModeloDeTabla() {
        
        return new ModeloDeTabla<Country>() {            
            @Override
            public Object getValueAt(Country country, int columnas) {
                switch (columnas){                   
                    case 0:
                        return country.getId();
                    case 1:
                        return country.getCountry();
                    case 2:
                        return country.getCity();
                    case 3:
                        return country.getNumberInhabitants();
                }
                return null;
            }

            @Override
            public String getColumnName(int columnas) {
                switch (columnas) {
                    case 0:
                        return "Id";
                    case 1:
                        return "País";
                    case 2:
                        return "Capital";
                    case 3:
                        return "N° Habitantes";
                }
                return null;                
            }

            @Override
            public int getColumnCount() {
                return 4;
            }

        }; 
    
    }
}
